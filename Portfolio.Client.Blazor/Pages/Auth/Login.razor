@page "/login"
@inject IAuthService AuthService
@inject NavigationManager Navigation
@inject IJSRuntime JS
@using Portfolio.Client.Blazor.Services
@using Portfolio.Shared.Models
@using Microsoft.AspNetCore.Components
@using Microsoft.AspNetCore.Components.Web

<h3>Login</h3>

@if (loginResponse != null && loginResponse.Success)
{
    <p>Login successful!</p>
    <p>Token: @loginResponse.Token</p>
    <p>Refresh Token: @loginResponse.RefreshToken</p>
}
else if (loginResponse != null && !loginResponse.Success)
{
    <p class="text-danger">@loginResponse.ErrorMessage</p>
}

<EditForm Model="loginRequest" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div>
        <label>Username:</label>
        <InputText @bind-Value="loginRequest.Username" />
    </div>

    <div>
        <label>Password:</label>
        <InputText @bind-Value="loginRequest.Password" type="password" />
    </div>

    <button type="submit">Login</button>
</EditForm>

@code {
    private LoginRequest loginRequest = new LoginRequest();
    private LoginResponse? loginResponse;

    private async Task HandleLogin()
    {
        loginResponse = await AuthService.LoginAsync(loginRequest);
        Console.WriteLine("Login1= " + loginResponse.ExpiresAt);
        Console.WriteLine("Login2= " + loginResponse.Success);
        Console.WriteLine("Login3= " + loginResponse.RefreshToken);
        if (loginResponse != null && loginResponse.Success)
        {
            Console.WriteLine("Login successful!");

            // Зберігаємо токен у LocalStorage
            await JS.InvokeVoidAsync("localStorage.setItem", "authToken", loginResponse.Token);
            Console.WriteLine("Ne perecudue");
            // Перенаправлення на головну сторінку
            Navigation.NavigateTo("/");
        }
    }
}
